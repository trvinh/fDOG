# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ master ]
    tags:
    - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test
      run: |
        pwd
        wget https://github.com/BIONF/data4travis/raw/main/dtu/signalp-4.1g.Linux.tar.gz &> /dev/null
        wget https://github.com/BIONF/data4travis/raw/main/dtu/tmhmm-2.0c.Linux.tar.gz &> /dev/null
        wget https://applbio.biologie.uni-frankfurt.de/download/hamstr_qfo/annotation_FAS2020d.tar.gz &> /dev/null
        pip install .
        fdog.setup -o /home/runner/work/fDOG/fDOG/dt --lib
        fdog.setup -o /home/runner/work/fDOG/fDOG/dt
        fas.setup -t /home/runner/work/fDOG/fDOG -d /home/runner/work/fDOG/fDOG
        less annoTools.txt | grep -v "COILS2" > annoTools.txt.mod
        mv annoTools.txt.mod annoTools.txt
        for i in $(ls dt/blast_dir | tail -n 44); do rm -rf dt/blast_dir/$i; rm -rf dt/genome_dir/$i; done
        fdog.showTaxa
        fdog.run --seqFile infile.fa --seqName test --refspec HUMAN@9606@3
        mkdir input
        ls
        fdog.checkData -g /home/runner/work/fDOG/fDOG/dt/genome_dir -b /home/runner/work/fDOG/fDOG/dt/blast_dir -w /home/runner/work/fDOG/fDOG/dt/weight_dir
        cp fdog/data/infile.fa input/01.fa
        cp fdog/data/infile.fa input/02.fa
        fdogs.run --input input --jobName test_multi --refspec HUMAN@9606@3 --fasoff
        fdog.addTaxon -f input/01.fa -i 559292 -o test_addTaxon -c -a --cpus 4 --force --replace
        ls
    - name: Deploy
      if: startsWith(github.event.ref, 'refs/tags')
      uses: casperdcl/deploy-pypi@v2
      with:
        password: ${{ secrets.pypi }}
        build: true
        upload: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
